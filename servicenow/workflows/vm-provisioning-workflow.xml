<?xml version="1.0" encoding="UTF-8"?>
<record_update table="wf_workflow">
    <wf_workflow action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>Automated workflow for Azure VM provisioning with approval and Azure DevOps integration</description>
        <name>VM Provisioning Workflow</name>
        <sys_id>vm_provisioning_workflow_001</sys_id>
        <table>sc_req_item</table>
        
        <!-- WORKFLOW ACTIVITIES -->
        
        <!-- Activity 1: L1 Approval -->
        <wf_activity action="INSERT_OR_UPDATE">
            <active>true</active>
            <activity_definition>wf_approval</activity_definition>
            <name>L1 Manager Approval</name>
            <order>100</order>
            <workflow display_value="VM Provisioning Workflow">vm_provisioning_workflow_001</workflow>
            <sys_id>vm_prov_activity_l1_approval</sys_id>
            <approval_type>user</approval_type>
            <approver>${current.opened_by.manager}</approver>
            <due_date>javascript:gs.daysAgo(-2)</due_date>
            <instructions>
                Please review and approve the VM provisioning request:
                
                VM Name: ${current.variables.vm_name}
                Environment: ${current.variables.environment}
                VM Size: ${current.variables.vm_size}
                OS: ${current.variables.os_type}
                Cost Center: ${current.variables.cost_center}
                
                Business Justification:
                ${current.variables.business_justification}
            </instructions>
        </wf_activity>
        
        <!-- Activity 2: L2 Cloud Team Approval -->
        <wf_activity action="INSERT_OR_UPDATE">
            <active>true</active>
            <activity_definition>wf_approval</activity_definition>
            <name>L2 Cloud Team Approval</name>
            <order>200</order>
            <workflow display_value="VM Provisioning Workflow">vm_provisioning_workflow_001</workflow>
            <sys_id>vm_prov_activity_l2_approval</sys_id>
            <condition>current.variables.vm_size.indexOf('D16') &gt; -1 || current.variables.vm_size.indexOf('E16') &gt; -1</condition>
            <approval_type>group</approval_type>
            <approver>cloud_infrastructure_team</approver>
            <due_date>javascript:gs.daysAgo(-1)</due_date>
            <instructions>
                L2 Cloud Team approval required for large VM sizes.
                
                Request Details:
                VM Name: ${current.variables.vm_name}
                VM Size: ${current.variables.vm_size}
                Environment: ${current.variables.environment}
                
                Please verify:
                - Quota availability
                - Cost implications
                - Compliance requirements
            </instructions>
        </wf_activity>
        
        <!-- Activity 3: Quota Validation -->
        <wf_activity action="INSERT_OR_UPDATE">
            <active>true</active>
            <activity_definition>wf_script</activity_definition>
            <name>Validate Azure Quota</name>
            <order>300</order>
            <workflow display_value="VM Provisioning Workflow">vm_provisioning_workflow_001</workflow>
            <sys_id>vm_prov_activity_quota_check</sys_id>
            <script><![CDATA[
                // Call Azure quota validation script
                var scriptName = 'scripts/powershell/Validate-Quota.ps1';
                var vmSize = current.variables.vm_size.toString();
                var region = current.variables.azure_region.toString();
                
                // Set work note
                current.work_notes = 'Validating Azure quota for ' + vmSize + ' in ' + region;
                current.update();
                
                // In production, this would trigger the PowerShell script via REST API
                // For now, we'll assume quota is available
                workflow.scratchpad.quota_available = true;
            ]]></script>
        </wf_activity>
        
        <!-- Activity 4: Trigger Azure DevOps Pipeline -->
        <wf_activity action="INSERT_OR_UPDATE">
            <active>true</active>
            <activity_definition>wf_rest</activity_definition>
            <name>Trigger Azure DevOps Pipeline</name>
            <order>400</order>
            <workflow display_value="VM Provisioning Workflow">vm_provisioning_workflow_001</workflow>
            <sys_id>vm_prov_activity_trigger_ado</sys_id>
            <rest_endpoint>https://dev.azure.com/Your Organization/_apis/pipelines/vm-provisioning/runs</rest_endpoint>
            <rest_method>POST</rest_method>
            <rest_headers>
                {
                  "Content-Type": "application/json",
                  "Authorization": "Bearer ${credentials.azure_devops_pat}"
                }
            </rest_headers>
            <rest_body><![CDATA[
                {
                  "resources": {
                    "repositories": {
                      "self": {
                        "refName": "refs/heads/main"
                      }
                    }
                  },
                  "templateParameters": {
                    "environment": "${current.variables.environment}",
                    "vmName": "${current.variables.vm_name}",
                    "resourceGroup": "${current.variables.resource_group}",
                    "location": "${current.variables.azure_region}",
                    "vmSize": "${current.variables.vm_size}",
                    "osType": "${current.variables.os_type}",
                    "osDiskSizeGB": "${current.variables.os_disk_size_gb}",
                    "dataDiskSizeGB": "${current.variables.data_disk_size_gb}",
                    "enableBackup": "${current.variables.enable_backup}",
                    "serviceNowTicket": "${current.number}",
                    "costCenter": "${current.variables.cost_center}"
                  }
                }
            ]]></rest_body>
            <script><![CDATA[
                // Store pipeline run ID
                var response = JSON.parse(response_body);
                workflow.scratchpad.pipeline_run_id = response.id;
                workflow.scratchpad.pipeline_url = response._links.web.href;
                
                // Update request item
                current.work_notes = 'Azure DevOps pipeline triggered: ' + workflow.scratchpad.pipeline_url;
                current.update();
            ]]></script>
        </wf_activity>
        
        <!-- Activity 5: Monitor Pipeline Execution -->
        <wf_activity action="INSERT_OR_UPDATE">
            <active>true</active>
            <activity_definition>wf_wait</activity_definition>
            <name>Monitor Pipeline Execution</name>
            <order>500</order>
            <workflow display_value="VM Provisioning Workflow">vm_provisioning_workflow_001</workflow>
            <sys_id>vm_prov_activity_monitor</sys_id>
            <condition_script><![CDATA[
                // Poll Azure DevOps API every 60 seconds
                var pipelineRunId = workflow.scratchpad.pipeline_run_id;
                
                // Call REST API to check status
                // In production: make actual REST call
                // For now, return true after 5 minutes
                var waitTime = 300; // 5 minutes
                workflow.scratchpad.provisioning_complete = true;
                
                answer = workflow.scratchpad.provisioning_complete;
            ]]></condition_script>
            <wait_duration>60</wait_duration>
            <max_wait_time>3600</max_wait_time>
        </wf_activity>
        
        <!-- Activity 6: Update CMDB -->
        <wf_activity action="INSERT_OR_UPDATE">
            <active>true</active>
            <activity_definition>wf_script</activity_definition>
            <name>Update CMDB</name>
            <order>600</order>
            <workflow display_value="VM Provisioning Workflow">vm_provisioning_workflow_001</workflow>
            <sys_id>vm_prov_activity_update_cmdb</sys_id>
            <script><![CDATA[
                // Create CI in CMDB
                var ci = new GlideRecord('cmdb_ci_vm_instance');
                ci.initialize();
                ci.name = current.variables.vm_name.toString();
                ci.vm_inst_id = workflow.scratchpad.azure_vm_id;
                ci.vcenter_name = 'Azure';
                ci.environment = current.variables.environment.toString();
                ci.os = current.variables.os_type.toString();
                ci.cpu_count = workflow.scratchpad.vm_cores;
                ci.ram = workflow.scratchpad.vm_memory_mb;
                ci.disk_space = current.variables.os_disk_size_gb.toString();
                ci.location = current.variables.azure_region.toString();
                ci.cost_center = current.variables.cost_center.toString();
                ci.owned_by = current.opened_by;
                ci.managed_by = 'cloud_infrastructure_team';
                ci.operational_status = '1'; // Operational
                ci.u_azure_subscription = workflow.scratchpad.azure_subscription_id;
                ci.u_resource_group = current.variables.resource_group.toString();
                ci.insert();
                
                current.work_notes = 'CMDB CI created: ' + ci.sys_id;
                current.update();
            ]]></script>
        </wf_activity>
        
        <!-- Activity 7: Send Completion Email -->
        <wf_activity action="INSERT_OR_UPDATE">
            <active>true</active>
            <activity_definition>wf_email</activity_definition>
            <name>Send Completion Notification</name>
            <order>700</order>
            <workflow display_value="VM Provisioning Workflow">vm_provisioning_workflow_001</workflow>
            <sys_id>vm_prov_activity_email</sys_id>
            <recipient>${current.opened_by}</recipient>
            <cc>${current.opened_by.manager}</cc>
            <subject>Azure VM Provisioned: ${current.variables.vm_name}</subject>
            <body><![CDATA[
                Your Azure Virtual Machine has been successfully provisioned.
                
                VM Details:
                - VM Name: ${current.variables.vm_name}
                - Environment: ${current.variables.environment}
                - VM Size: ${current.variables.vm_size}
                - Operating System: ${current.variables.os_type}
                - Region: ${current.variables.azure_region}
                - Resource Group: ${current.variables.resource_group}
                
                Access Information:
                - VM ID: ${workflow.scratchpad.azure_vm_id}
                - Private IP: ${workflow.scratchpad.vm_private_ip}
                - Public IP: ${workflow.scratchpad.vm_public_ip}
                
                Next Steps:
                1. Connect to the VM using RDP (Windows) or SSH (Linux)
                2. Default credentials have been sent separately to your email
                3. Change default password on first login
                4. Verify all required applications are installed
                
                Azure DevOps Pipeline: ${workflow.scratchpad.pipeline_url}
                ServiceNow Request: ${current.number}
                
                If you have any questions or issues, please contact the Cloud Infrastructure team.
                
                Thank you,
                Cloud Infrastructure Team
            ]]></body>
        </wf_activity>
        
        <!-- Activity 8: Close Request -->
        <wf_activity action="INSERT_OR_UPDATE">
            <active>true</active>
            <activity_definition>wf_script</activity_definition>
            <name>Close Request Item</name>
            <order>800</order>
            <workflow display_value="VM Provisioning Workflow">vm_provisioning_workflow_001</workflow>
            <sys_id>vm_prov_activity_close</sys_id>
            <script><![CDATA[
                current.state = 3; // Closed Complete
                current.work_notes = 'VM provisioning completed successfully';
                current.update();
            ]]></script>
        </wf_activity>
        
    </wf_workflow>
</record_update>
