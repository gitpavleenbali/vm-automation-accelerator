{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dashboardName": {
      "type": "string",
      "defaultValue": "Enterprise-VM-Compliance-Dashboard",
      "metadata": {
        "description": "Name of the dashboard"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the dashboard"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Portal/dashboards",
      "apiVersion": "2020-09-01-preview",
      "name": "[parameters('dashboardName')]",
      "location": "[parameters('location')]",
      "tags": {
        "hidden-title": "VM Compliance Dashboard"
      },
      "properties": {
        "lenses": [
          {
            "order": 0,
            "parts": [
              {
                "position": {
                  "x": 0,
                  "y": 0,
                  "rowSpan": 4,
                  "colSpan": 6
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "/subscriptions/{subscription-id}/resourceGroups/{resource-group}"
                              },
                              "name": "PolicyCompliance",
                              "aggregationType": 4,
                              "namespace": "Microsoft.PolicyInsights",
                              "metricVisualization": {
                                "displayName": "Policy Compliance"
                              }
                            }
                          ],
                          "title": "Overall Policy Compliance",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 6,
                  "y": 0,
                  "rowSpan": 4,
                  "colSpan": 6
                },
                "metadata": {
                  "inputs": [],
                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                  "settings": {
                    "content": {
                      "settings": {
                        "content": "# VM Compliance Dashboard\n\n## Compliance Policies\n\n- **Encryption at Host**: All VMs must have encryption enabled\n- **Mandatory Tags**: Environment, CostCenter, Owner, Application\n- **Naming Convention**: [env]-vm-[app]-[region]-[###]\n- **Azure Backup**: Production VMs must be backed up\n- **Approved SKUs**: Only approved VM sizes allowed\n\n## Quick Links\n\n- [Azure Policy](https://portal.azure.com/#blade/Microsoft_Azure_Policy/PolicyMenuBlade)\n- [Cost Management](https://portal.azure.com/#blade/Microsoft_Azure_CostManagement/Menu/overview)\n- [Azure Advisor](https://portal.azure.com/#blade/Microsoft_Azure_Expert/AdvisorMenuBlade/overview)",
                        "title": "Overview",
                        "subtitle": "VM Compliance"
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 0,
                  "y": 4,
                  "rowSpan": 4,
                  "colSpan": 6
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": "/subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/microsoft.insights/components/{app-insights}"
                    },
                    {
                      "name": "Query",
                      "value": "PolicyResources\n| where type == 'microsoft.policyinsights/policystates'\n| where properties.complianceState == 'NonCompliant'\n| where properties.resourceType == 'Microsoft.Compute/virtualMachines'\n| summarize Count=count() by tostring(properties.policyDefinitionName)\n| order by Count desc\n| take 10"
                    }
                  ],
                  "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                  "settings": {
                    "content": {
                      "Query": "PolicyResources\n| where type == 'microsoft.policyinsights/policystates'\n| where properties.complianceState == 'NonCompliant'\n| where properties.resourceType == 'Microsoft.Compute/virtualMachines'\n| summarize Count=count() by tostring(properties.policyDefinitionName)\n| order by Count desc\n| take 10",
                      "ControlType": "AnalyticsGrid",
                      "SpecificChart": "StackedColumn",
                      "Dimensions": {
                        "xAxis": {
                          "name": "properties_policyDefinitionName",
                          "type": "string"
                        },
                        "yAxis": [
                          {
                            "name": "Count",
                            "type": "long"
                          }
                        ],
                        "splitBy": [],
                        "aggregation": "Sum"
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 6,
                  "y": 4,
                  "rowSpan": 4,
                  "colSpan": 6
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": "/subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/microsoft.insights/components/{app-insights}"
                    },
                    {
                      "name": "Query",
                      "value": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend Environment = tostring(tags.Environment)\n| summarize Count=count() by Environment\n| order by Count desc"
                    }
                  ],
                  "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                  "settings": {
                    "content": {
                      "Query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend Environment = tostring(tags.Environment)\n| summarize Count=count() by Environment\n| order by Count desc",
                      "ControlType": "FrameControlChart",
                      "SpecificChart": "Pie"
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 0,
                  "y": 8,
                  "rowSpan": 4,
                  "colSpan": 12
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": "/subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/microsoft.insights/components/{app-insights}"
                    },
                    {
                      "name": "Query",
                      "value": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend VMSize = tostring(properties.hardwareProfile.vmSize)\n| extend Environment = tostring(tags.Environment)\n| extend CostCenter = tostring(tags.CostCenter)\n| extend Owner = tostring(tags.Owner)\n| project name, VMSize, Environment, CostCenter, Owner, location\n| order by name asc"
                    }
                  ],
                  "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                  "settings": {
                    "content": {
                      "Query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend VMSize = tostring(properties.hardwareProfile.vmSize)\n| extend Environment = tostring(tags.Environment)\n| extend CostCenter = tostring(tags.CostCenter)\n| extend Owner = tostring(tags.Owner)\n| project name, VMSize, Environment, CostCenter, Owner, location\n| order by name asc",
                      "ControlType": "AnalyticsGrid"
                    }
                  }
                }
              }
            ]
          }
        ],
        "metadata": {
          "model": {
            "timeRange": {
              "value": {
                "relative": {
                  "duration": 24,
                  "timeUnit": 1
                }
              },
              "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "dashboardId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Portal/dashboards', parameters('dashboardName'))]"
    }
  }
}
